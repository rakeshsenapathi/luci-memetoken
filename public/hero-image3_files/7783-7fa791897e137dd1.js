(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[7783],{16563:function(e,n,t){"use strict";t.d(n,{Z:function(){return o}});var r=t(23877),i=t(65055),a=t(33219);function o(e){(0,a.Z)(1,arguments);var n=(0,i.Z)(e);return(0,r.Z)(1e3*n)}},83401:function(e,n,t){var r=t(24253),i=t(72251),a=t(63792),o=Math.ceil,u=Math.max;e.exports=function(e,n,t){n=(t?i(e,n,t):void 0===n)?1:u(a(n),0);var c=null==e?0:e.length;if(!c||n<1)return[];for(var s=0,m=0,l=Array(o(c/n));s<c;)l[m++]=r(e,s,s+=n);return l}},26174:function(e,n,t){"use strict";t.d(n,{xO:function(){return b},vN:function(){return T},zy:function(){return w},Gt:function(){return x}});var r,i=t(97175),a=t(7744),o=t(21160),u=t(9267),c=t(57613),s=t(81423),m=t(42754),l=t(52466),p=t(78200);t(795).Buffer;!function(e){e[e.Uninitialized=0]="Uninitialized",e[e.Initialized=1]="Initialized",e[e.Frozen=2]="Frozen"}(r||(r={}));const d=(0,l.struct)([(0,p.ZL)("mint"),(0,p.ZL)("owner"),(0,p.AW)("amount"),(0,l.u32)("delegateOption"),(0,p.ZL)("delegate"),(0,l.u8)("state"),(0,l.u32)("isNativeOption"),(0,p.AW)("isNative"),(0,p.AW)("delegatedAmount"),(0,l.u32)("closeAuthorityOption"),(0,p.ZL)("closeAuthority")]);d.span;var y=t(83401),f=t(795).Buffer,g=(e,n,t)=>new Promise(((r,i)=>{var a=e=>{try{u(t.next(e))}catch(n){i(n)}},o=e=>{try{u(t.throw(e))}catch(n){i(n)}},u=e=>e.done?r(e.value):Promise.resolve(e.value).then(a,o);u((t=t.apply(e,n)).next())})),h=new a.PublicKey("REFER4ZgmyYx9c6He5XfaTMiGfdLwRnkV4RPp9t9iF3"),A={version:"0.1.0",name:"referral",instructions:[{name:"initializeProject",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"base",isMut:!1,isSigner:!0},{name:"admin",isMut:!1,isSigner:!1},{name:"project",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"params",type:{defined:"InitializeProjectParams"}}]},{name:"initializeReferralAccount",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"partner",isMut:!1,isSigner:!1},{name:"project",isMut:!1,isSigner:!1},{name:"referralAccount",isMut:!0,isSigner:!0},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"params",type:{defined:"InitializeReferralAccountParams"}}]},{name:"initializeReferralAccountWithName",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"partner",isMut:!1,isSigner:!1},{name:"project",isMut:!1,isSigner:!1},{name:"referralAccount",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"params",type:{defined:"InitializeReferralAccountWithNameParams"}}]},{name:"updateProject",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"project",isMut:!0,isSigner:!1}],args:[{name:"params",type:{defined:"UpdateProjectParams"}}]},{name:"transferProject",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"newAdmin",isMut:!1,isSigner:!1},{name:"project",isMut:!0,isSigner:!1}],args:[{name:"params",type:{defined:"TransferProjectParams"}}]},{name:"updateReferralAccount",accounts:[{name:"admin",isMut:!1,isSigner:!0},{name:"project",isMut:!1,isSigner:!1},{name:"referralAccount",isMut:!0,isSigner:!1}],args:[{name:"params",type:{defined:"UpdateReferralAccountParams"}}]},{name:"transferReferralAccount",accounts:[{name:"partner",isMut:!1,isSigner:!0},{name:"newPartner",isMut:!1,isSigner:!1},{name:"referralAccount",isMut:!0,isSigner:!1}],args:[{name:"params",type:{defined:"TransferReferralAccountParams"}}]},{name:"initializeReferralTokenAccount",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"project",isMut:!1,isSigner:!1},{name:"referralAccount",isMut:!1,isSigner:!1},{name:"referralTokenAccount",isMut:!0,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"claim",accounts:[{name:"payer",isMut:!0,isSigner:!0},{name:"project",isMut:!1,isSigner:!1},{name:"admin",isMut:!1,isSigner:!1},{name:"projectAdminTokenAccount",isMut:!0,isSigner:!1},{name:"referralAccount",isMut:!1,isSigner:!1},{name:"referralTokenAccount",isMut:!0,isSigner:!1},{name:"partner",isMut:!1,isSigner:!1},{name:"partnerTokenAccount",isMut:!0,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"createAdminTokenAccount",accounts:[{name:"project",isMut:!1,isSigner:!1},{name:"projectAuthority",isMut:!0,isSigner:!1},{name:"admin",isMut:!1,isSigner:!1},{name:"projectAdminTokenAccount",isMut:!0,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"associatedTokenProgram",isMut:!1,isSigner:!1}],args:[]},{name:"withdrawFromProject",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"project",isMut:!1,isSigner:!1},{name:"projectAuthority",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"params",type:{defined:"WithdrawFromProjectParams"}}]}],accounts:[{name:"project",type:{kind:"struct",fields:[{name:"base",type:"publicKey"},{name:"admin",type:"publicKey"},{name:"name",type:"string"},{name:"defaultShareBps",type:"u16"}]}},{name:"referralAccount",type:{kind:"struct",fields:[{name:"partner",type:"publicKey"},{name:"project",type:"publicKey"},{name:"shareBps",type:"u16"},{name:"name",type:{option:"string"}}]}}],types:[{name:"InitializeProjectParams",type:{kind:"struct",fields:[{name:"name",type:"string"},{name:"defaultShareBps",type:"u16"}]}},{name:"InitializeReferralAccountWithNameParams",type:{kind:"struct",fields:[{name:"name",type:"string"}]}},{name:"InitializeReferralAccountParams",type:{kind:"struct",fields:[]}},{name:"TransferProjectParams",type:{kind:"struct",fields:[]}},{name:"TransferReferralAccountParams",type:{kind:"struct",fields:[]}},{name:"UpdateProjectParams",type:{kind:"struct",fields:[{name:"name",type:{option:"string"}},{name:"defaultShareBps",type:{option:"u16"}}]}},{name:"UpdateReferralAccountParams",type:{kind:"struct",fields:[{name:"shareBps",type:"u16"}]}},{name:"WithdrawFromProjectParams",type:{kind:"struct",fields:[{name:"amount",type:"u64"}]}}],events:[{name:"InitializeProjectEvent",fields:[{name:"project",type:"publicKey",index:!1},{name:"admin",type:"publicKey",index:!1},{name:"name",type:"string",index:!1},{name:"defaultShareBps",type:"u16",index:!1}]},{name:"UpdateProjectEvent",fields:[{name:"project",type:"publicKey",index:!1},{name:"name",type:"string",index:!1},{name:"defaultShareBps",type:"u16",index:!1}]},{name:"InitializeReferralAccountEvent",fields:[{name:"project",type:"publicKey",index:!1},{name:"partner",type:"publicKey",index:!1},{name:"referralAccount",type:"publicKey",index:!1},{name:"shareBps",type:"u16",index:!1},{name:"name",type:{option:"string"},index:!1}]},{name:"UpdateReferralAccountEvent",fields:[{name:"referralAccount",type:"publicKey",index:!1},{name:"shareBps",type:"u16",index:!1}]},{name:"InitializeReferralTokenAccountEvent",fields:[{name:"project",type:"publicKey",index:!1},{name:"referralAccount",type:"publicKey",index:!1},{name:"referralTokenAccount",type:"publicKey",index:!1},{name:"mint",type:"publicKey",index:!1}]},{name:"ClaimEvent",fields:[{name:"project",type:"publicKey",index:!1},{name:"projectAdminTokenAccount",type:"publicKey",index:!1},{name:"referralAccount",type:"publicKey",index:!1},{name:"referralTokenAccount",type:"publicKey",index:!1},{name:"partnerTokenAccount",type:"publicKey",index:!1},{name:"mint",type:"publicKey",index:!1},{name:"referralAmount",type:"u64",index:!1},{name:"projectAmount",type:"u64",index:!1}]}],errors:[{code:6e3,name:"InvalidCalculation"},{code:6001,name:"InvalidSharePercentage"},{code:6002,name:"NameTooLong"}]},P=(e,n,t,...r)=>g(void 0,[e,n,t,...r],(function*(e,n,t,r=n,i=!0,a=o.H_){let s;try{s=(0,u.MO)(e,n,i,a);if(!(yield t.getAccountInfo(s))){return[s,(0,c.E)(r,s,n,e,a)]}return[s,void 0]}catch(m){throw console.error("Error::getOrCreateATAInstruction",m),m}})),M=class{constructor(e){this.connection=e;const n=new i.Y7(e,{},i.Y7.defaultOptions());this.program=new i.$r(A,h,n)}getProjects(){return g(this,arguments,(function*(e=[]){return yield this.program.account.project.all(e)}))}getProject(e){return g(this,null,(function*(){return yield this.program.account.project.fetch(e)}))}getReferralAccount(e){return g(this,null,(function*(){return yield this.program.account.referralAccount.fetch(e)}))}getReferralAccounts(){return g(this,arguments,(function*(e=[]){return yield this.program.account.referralAccount.all(e)}))}getProjectAuthorityPubKey(e){let[n]=a.PublicKey.findProgramAddressSync([f.from("project_authority"),e.base.toBuffer()],this.program.programId);return n}getReferralAccountWithNamePubKey({projectPubKey:e,name:n}){const[t]=a.PublicKey.findProgramAddressSync([f.from("referral"),e.toBuffer(),f.from(n)],this.program.programId);return t}getReferralTokenAccountPubKey({referralAccountPubKey:e,mint:n}){const[t]=a.PublicKey.findProgramAddressSync([f.from("referral_ata"),e.toBuffer(),n.toBuffer()],this.program.programId);return t}getReferralTokenAccounts(e){return g(this,null,(function*(){const n=yield this.program.account.referralAccount.fetch(new a.PublicKey(e)),[t,r]=yield Promise.all([o.H_,o.nA].map((t=>g(this,null,(function*(){const r=new Set,i=new Set,o=new Map;return(yield this.connection.getTokenAccountsByOwner(n.project,{programId:t})).value.map((n=>{const t=d.decode(n.account.data);if(!r.has(t.mint.toBase58())){const n=this.getReferralTokenAccountPubKey({referralAccountPubKey:new a.PublicKey(e),mint:t.mint});r.add(t.mint.toBase58()),i.add(n.toBase58())}o.set(n.pubkey.toBase58(),t)})),Array.from(i).reduce(((e,n)=>{const t=o.get(n);return t&&e.push({pubkey:new a.PublicKey(n),account:t}),e}),[])})))));return{tokenAccounts:t,token2022Accounts:r}}))}initializeProject(e){return g(this,arguments,(function*({basePubKey:e,adminPubKey:n,name:t,defaultShareBps:r}){const[i]=a.PublicKey.findProgramAddressSync([f.from("project"),e.toBuffer()],this.program.programId);return yield this.program.methods.initializeProject({name:t,defaultShareBps:r}).accounts({admin:n,project:i,base:e}).transaction()}))}transferProject(e){return g(this,arguments,(function*({newAdminPubKey:e,projectPubKey:n}){const t=yield this.program.account.project.fetch(n);return yield this.program.methods.transferProject({}).accounts({admin:t.admin,project:n,newAdmin:e}).transaction()}))}initializeReferralAccount(e){return g(this,arguments,(function*({projectPubKey:e,partnerPubKey:n,payerPubKey:t,referralAccountPubKey:r}){return yield this.program.methods.initializeReferralAccount({}).accounts({project:e,partner:n,referralAccount:r,payer:t}).transaction()}))}initializeReferralAccountWithName(e){return g(this,arguments,(function*({projectPubKey:e,partnerPubKey:n,payerPubKey:t,name:r}){const i=this.getReferralAccountWithNamePubKey({projectPubKey:e,name:r});return{tx:yield this.program.methods.initializeReferralAccountWithName({name:r}).accounts({project:e,partner:n,referralAccount:i,payer:t}).transaction(),referralAccountPubKey:i}}))}transferReferralAccount(e){return g(this,arguments,(function*({newPartnerPubKey:e,referralAccountPubKey:n}){const t=yield this.program.account.referralAccount.fetch(n);return yield this.program.methods.transferReferralAccount({}).accounts({partner:t.partner,newPartner:e,referralAccount:n}).transaction()}))}initializeReferralTokenAccount(e){return g(this,arguments,(function*({payerPubKey:e,referralAccountPubKey:n,mint:t}){const r=yield this.connection.getAccountInfo(t);if(!r)throw new Error("Invalid mint");if(![o.H_,o.nA].some((e=>e.equals(r.owner))))throw new Error("Invalid mint");const i=yield this.program.account.referralAccount.fetch(n),a=this.getReferralTokenAccountPubKey({referralAccountPubKey:n,mint:t});return{tx:yield this.program.methods.initializeReferralTokenAccount().accounts({payer:e,project:i.project,referralAccount:n,referralTokenAccount:a,mint:t,tokenProgram:r.owner}).transaction(),referralTokenAccountPubKey:a}}))}claim(e){return g(this,arguments,(function*({payerPubKey:e,referralAccountPubKey:n,mint:t}){const r=yield this.connection.getAccountInfo(t);if(!r)throw new Error("Invalid mint");if(![o.H_,o.nA].some((e=>e.equals(r.owner))))throw new Error("Invalid mint");const i=yield this.program.account.referralAccount.fetch(n),a=yield this.program.account.project.fetch(i.project),[u,[c,s],[m,l]]=yield Promise.all([this.getReferralTokenAccountPubKey({referralAccountPubKey:n,mint:t}),P(t,i.partner,this.connection,e,void 0,r.owner),P(t,a.admin,this.connection,e,void 0,r.owner)]);let p=[];if(s&&p.push(s),l){const e=this.getProjectAuthorityPubKey(a),n=yield this.program.methods.createAdminTokenAccount().accounts({project:i.project,projectAuthority:e,admin:a.admin,projectAdminTokenAccount:m,mint:t,tokenProgram:r.owner}).instruction();p.push(n)}return yield this.program.methods.claim().accounts({payer:e,project:i.project,admin:a.admin,projectAdminTokenAccount:m,referralAccount:n,referralTokenAccount:u,partner:i.partner,partnerTokenAccount:c,mint:t,tokenProgram:r.owner}).preInstructions(p).transaction()}))}claimAll(e){return g(this,arguments,(function*({payerPubKey:e,referralAccountPubKey:n}){const t=(yield this.connection.getLatestBlockhash()).blockhash,r=yield this.connection.getAddressLookupTable(new a.PublicKey("GBzQG2iFrPwXjGtCnwNt9S5eHd8xAR8jUMt3QDJpnjud")).then((e=>e.value)),i=yield this.program.account.referralAccount.fetch(n),s=yield this.program.account.project.fetch(i.project),m=this.getProjectAuthorityPubKey(s),{tokenAccounts:l,token2022Accounts:p}=yield this.getReferralTokenAccounts(n.toString()),d=yield Promise.all([l,p].map(((l,p)=>g(this,null,(function*(){const d=0===p?o.H_:o.nA,f=l.filter((e=>e.account.amount>0)),h=yield this.connection.getParsedTokenAccountsByOwner(i.partner,{programId:d}),A=yield this.connection.getParsedTokenAccountsByOwner(s.admin,{programId:d}),P=yield Promise.all(f.map((t=>g(this,null,(function*(){var r,a;let o=null==(r=h.value.find((e=>t.account.mint.toBase58()===e.account.data.parsed.info.mint)))?void 0:r.pubkey,l=null==(a=A.value.find((e=>t.account.mint.toBase58()===e.account.data.parsed.info.mint)))?void 0:a.pubkey;const p=this.getReferralTokenAccountPubKey({referralAccountPubKey:n,mint:t.account.mint}),y=[];if(o||(o=(0,u.MO)(t.account.mint,i.partner,!0,d),y.push((0,c.E)(e,o,i.partner,t.account.mint,d))),!l){l=(0,u.MO)(t.account.mint,s.admin,!0,d);const e=yield this.program.methods.createAdminTokenAccount().accounts({project:i.project,projectAuthority:m,admin:s.admin,projectAdminTokenAccount:l,mint:t.account.mint,tokenProgram:d}).instruction();y.push(e)}return{referralTokenAccountPubKey:p,projectAdminTokenAccount:l,partnerTokenAccount:o,preInstructions:y,mint:t.account.mint}}))))),M=y(P,5);return Promise.all(M.map((o=>g(this,null,(function*(){const u=yield Promise.all(o.map((t=>g(this,[t],(function*({preInstructions:t,mint:r,projectAdminTokenAccount:a,referralTokenAccountPubKey:o,partnerTokenAccount:u}){return yield this.program.methods.claim().accounts({payer:e,project:i.project,admin:s.admin,projectAdminTokenAccount:a,referralAccount:n,referralTokenAccount:o,partner:i.partner,partnerTokenAccount:u,mint:r,tokenProgram:d}).preInstructions(t).transaction()}))))),c=new a.TransactionMessage({payerKey:e,instructions:u.flatMap((e=>e.instructions)),recentBlockhash:t}).compileToV0Message([r]);return new a.VersionedTransaction(c)})))))})))));return d.flat()}))}},k=t(795).Buffer,S=(e,n,t)=>new Promise(((r,i)=>{var a=e=>{try{u(t.next(e))}catch(n){i(n)}},o=e=>{try{u(t.throw(e))}catch(n){i(n)}},u=e=>e.done?r(e.value):Promise.resolve(e.value).then(a,o);u((t=t.apply(e,n)).next())})),b={version:"0.1.0",name:"limit_order",instructions:[{name:"initializeOrder",accounts:[{name:"base",isMut:!1,isSigner:!0},{name:"maker",isMut:!0,isSigner:!0},{name:"order",isMut:!0,isSigner:!1},{name:"reserve",isMut:!0,isSigner:!1,docs:["CHECK"]},{name:"makerInputAccount",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1},{name:"makerOutputAccount",isMut:!1,isSigner:!1},{name:"referral",isMut:!1,isSigner:!1,isOptional:!0},{name:"outputMint",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"rent",isMut:!1,isSigner:!1}],args:[{name:"makingAmount",type:"u64"},{name:"takingAmount",type:"u64"},{name:"expiredAt",type:{option:"i64"}}]},{name:"fillOrder",accounts:[{name:"order",isMut:!0,isSigner:!1},{name:"reserve",isMut:!0,isSigner:!1},{name:"maker",isMut:!0,isSigner:!1},{name:"taker",isMut:!1,isSigner:!0},{name:"takerOutputAccount",isMut:!0,isSigner:!1},{name:"makerOutputAccount",isMut:!0,isSigner:!1},{name:"takerInputAccount",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!1},{name:"programFeeAccount",isMut:!0,isSigner:!1},{name:"referral",isMut:!0,isSigner:!1,isOptional:!0},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"makingAmount",type:"u64"},{name:"maxTakingAmount",type:"u64"}]},{name:"preFlashFillOrder",accounts:[{name:"order",isMut:!0,isSigner:!1},{name:"reserve",isMut:!0,isSigner:!1},{name:"taker",isMut:!1,isSigner:!0},{name:"takerOutputAccount",isMut:!0,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1},{name:"inputMintTokenProgram",isMut:!1,isSigner:!1},{name:"instruction",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"makingAmount",type:"u64"}]},{name:"flashFillOrder",accounts:[{name:"order",isMut:!0,isSigner:!1},{name:"reserve",isMut:!0,isSigner:!1},{name:"maker",isMut:!0,isSigner:!1},{name:"taker",isMut:!1,isSigner:!0},{name:"makerOutputAccount",isMut:!0,isSigner:!1},{name:"takerInputAccount",isMut:!0,isSigner:!1},{name:"feeAuthority",isMut:!1,isSigner:!1},{name:"programFeeAccount",isMut:!0,isSigner:!1},{name:"referral",isMut:!0,isSigner:!1,isOptional:!0},{name:"inputMint",isMut:!1,isSigner:!1},{name:"inputMintTokenProgram",isMut:!1,isSigner:!1},{name:"outputMint",isMut:!1,isSigner:!1},{name:"outputMintTokenProgram",isMut:!1,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"maxTakingAmount",type:"u64"}]},{name:"cancelOrder",accounts:[{name:"order",isMut:!0,isSigner:!1},{name:"reserve",isMut:!0,isSigner:!1,docs:["CHECK"]},{name:"maker",isMut:!0,isSigner:!0},{name:"makerInputAccount",isMut:!0,isSigner:!1,docs:["CHECK, it is not important if it is sol input mint"]},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1,isOptional:!0}],args:[]},{name:"cancelExpiredOrder",accounts:[{name:"order",isMut:!0,isSigner:!1},{name:"reserve",isMut:!0,isSigner:!1,docs:["CHECK"]},{name:"maker",isMut:!0,isSigner:!1},{name:"makerInputAccount",isMut:!0,isSigner:!1,docs:["CHECK, it is not important if it is sol input mint"]},{name:"systemProgram",isMut:!1,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"inputMint",isMut:!1,isSigner:!1,isOptional:!0}],args:[]},{name:"withdrawFee",accounts:[{name:"admin",isMut:!0,isSigner:!0},{name:"feeAuthority",isMut:!1,isSigner:!1,docs:["CHECK"]},{name:"programFeeAccount",isMut:!0,isSigner:!1},{name:"adminTokenAcocunt",isMut:!0,isSigner:!1},{name:"tokenProgram",isMut:!1,isSigner:!1},{name:"mint",isMut:!1,isSigner:!1}],args:[{name:"amount",type:"u64"}]},{name:"initFee",accounts:[{name:"keeper",isMut:!0,isSigner:!0},{name:"feeAuthority",isMut:!0,isSigner:!1},{name:"systemProgram",isMut:!1,isSigner:!1}],args:[{name:"makerFee",type:"u64"},{name:"makerStableFee",type:"u64"},{name:"takerFee",type:"u64"},{name:"takerStableFee",type:"u64"}]},{name:"updateFee",accounts:[{name:"keeper",isMut:!0,isSigner:!0},{name:"feeAuthority",isMut:!0,isSigner:!1}],args:[{name:"makerFee",type:"u64"},{name:"makerStableFee",type:"u64"},{name:"takerFee",type:"u64"},{name:"takerStableFee",type:"u64"}]}],accounts:[{name:"fee",type:{kind:"struct",fields:[{name:"makerFee",type:"u64"},{name:"makerStableFee",type:"u64"},{name:"takerFee",type:"u64"},{name:"takerStableFee",type:"u64"}]}},{name:"order",type:{kind:"struct",fields:[{name:"maker",type:"publicKey"},{name:"inputMint",type:"publicKey"},{name:"outputMint",type:"publicKey"},{name:"waiting",type:"bool"},{name:"oriMakingAmount",type:"u64"},{name:"oriTakingAmount",type:"u64"},{name:"makingAmount",type:"u64"},{name:"takingAmount",type:"u64"},{name:"makerInputAccount",type:"publicKey"},{name:"makerOutputAccount",type:"publicKey"},{name:"reserve",type:"publicKey"},{name:"borrowMakingAmount",type:"u64"},{name:"expiredAt",type:{option:"i64"}},{name:"base",type:"publicKey"},{name:"referral",type:{option:"publicKey"}}]}}],events:[{name:"TradeEvent",fields:[{name:"orderKey",type:"publicKey",index:!1},{name:"taker",type:"publicKey",index:!1},{name:"remainingInAmount",type:"u64",index:!1},{name:"remainingOutAmount",type:"u64",index:!1},{name:"inAmount",type:"u64",index:!1},{name:"outAmount",type:"u64",index:!1}]},{name:"CancelOrderEvent",fields:[{name:"orderKey",type:"publicKey",index:!1}]},{name:"CreateOrderEvent",fields:[{name:"orderKey",type:"publicKey",index:!1},{name:"maker",type:"publicKey",index:!1},{name:"inputMint",type:"publicKey",index:!1},{name:"outputMint",type:"publicKey",index:!1},{name:"inAmount",type:"u64",index:!1},{name:"outAmount",type:"u64",index:!1},{name:"expiredAt",type:{option:"i64"},index:!1}]}],errors:[{code:6e3,name:"InvalidMakingAmount"},{code:6001,name:"InvalidTakingAmount"},{code:6002,name:"InvalidMaxTakingAmount"},{code:6003,name:"InvalidCalculation"},{code:6004,name:"InvalidInputAccount"},{code:6005,name:"InvalidOutputAccount"},{code:6006,name:"InvalidPair"},{code:6007,name:"MissingReferral"},{code:6008,name:"OrderExpired"},{code:6009,name:"OrderNotExpired"},{code:6010,name:"InvalidKeeper"},{code:6011,name:"MathOverflow"},{code:6012,name:"ProgramMismatch"},{code:6013,name:"UnknownInstruction"},{code:6014,name:"MissingRepayInstructions"},{code:6015,name:"InvalidOrder"},{code:6016,name:"InvalidBorrowMakingAmount"}]},K=(e,n,t,...r)=>S(void 0,[e,n,t,...r],(function*(e,n,t,r=n,i=!0,a=o.H_){let s;try{s=yield(0,u.Am)(e,n,i,a);if(!(yield t.getAccountInfo(s))){return[s,(0,c.E)(r,s,n,e,a)]}return[s,void 0]}catch(m){throw console.error("Error::getOrCreateATAInstruction",m),m}})),w={localnet:new a.PublicKey("APpKbNFPVs3tpkMsKCHJCdD1uKiTH57KYXj6RQnqY1Fu"),devnet:new a.PublicKey("A785JfFMTxGPvmij7dC5GvqLFujJuFTdytnPMQf4Txuw"),"mainnet-beta":new a.PublicKey("jupoNjAxXgZ4rjzxzPMP4oxduvQsQtZzyknqvzYNrNu")},v=new a.PublicKey("45ruCyfdRkWpRNGEqWzjCiXRHkZs8WXCLQ67Pnpye7Hp"),j=(0,s.K5)({links:[(0,s.N8)({url:"https://jup.ag/api/trpc"})],transformer:m.ZP}),T=class{constructor(e,n=null,t=null,r="mainnet-beta"){this.referralAccount=n,this.referralName=t,this.connection=e,this.referralProvider=new M(e);const a=new i.Y7(e,{},i.Y7.defaultOptions());this.program=new i.$r(b,w[r],a)}getFee(){return S(this,null,(function*(){let[e]=a.PublicKey.findProgramAddressSync([k.from("fee")],this.program.programId);return yield this.program.account.fee.fetch(e)}))}getOrder(e){return S(this,null,(function*(){return yield this.program.account.order.fetch(e)}))}getOrders(){return S(this,arguments,(function*(e=[]){return yield this.program.account.order.all(e)}))}getOrderPubkey(e){return a.PublicKey.findProgramAddressSync([k.from("order"),e.toBuffer()],w["mainnet-beta"])[0]}getOrderHistoryCount(e){return S(this,arguments,(function*({wallet:e}){return yield j.orderHistoryCount.query({wallet:e})}))}getOrderHistory(e){return S(this,arguments,(function*({wallet:e,lastCursor:n,take:t}){return yield j.orderHistory.query({wallet:e,cursor:n,take:t})}))}getTradeHistoryCount(e){return S(this,arguments,(function*({wallet:e}){return yield j.tradeHistoryCount.query({wallet:e})}))}getTradeHistory(e){return S(this,arguments,(function*({wallet:e,lastCursor:n,take:t}){return yield j.tradeHistory.query({wallet:e,cursor:n,take:t})}))}createOrder(e){return S(this,arguments,(function*({owner:e,inputMint:n,outputMint:t,outAmount:r,inAmount:i,base:u,expiredAt:c=null}){const s=this.getOrderPubkey(u),[m]=a.PublicKey.findProgramAddressSync([k.from("reserve"),s.toBuffer()],this.program.programId);let l=[];const p=yield this.connection.getAccountInfo(n),d=yield this.connection.getAccountInfo(t);let[[y,f],[g,h]]=yield Promise.all([K(n,e,this.connection,void 0,void 0,p.owner),K(t,e,this.connection,void 0,void 0,d.owner)]);n.equals(o.Gd)?y=g:f&&l.push(f),t.equals(o.Gd)?g=y:h&&l.push(h);let A=null;if(this.referralAccount){const e=this.getReferralAccountPubKey(),n=this.referralProvider.getReferralTokenAccountPubKey({mint:t,referralAccountPubKey:e});(yield this.connection.getAccountInfo(n))&&(A=n)}return{tx:yield this.program.methods.initializeOrder(i,r,c).accounts({maker:e,makerInputAccount:y,inputMint:n,makerOutputAccount:g,outputMint:t,order:s,reserve:m,referral:A,base:u,tokenProgram:p.owner}).preInstructions(l).transaction(),orderPubKey:s}}))}cancelOrderInstruction(e){return S(this,arguments,(function*({owner:e,orderPubKey:n}){const t=yield this.program.account.order.fetch(n);let r=[];const i=yield this.connection.getAccountInfo(t.inputMint),[a,u]=yield K(t.inputMint,e,this.connection,void 0,void 0,i.owner);u&&!t.inputMint.equals(o.Gd)&&r.push(u);const c=yield this.program.methods.cancelOrder().accounts({maker:e,makerInputAccount:a,reserve:t.reserve,order:n,tokenProgram:i.owner,inputMint:t.inputMint}).instruction();return[...r,c]}))}cancelOrder(e){return S(this,arguments,(function*({owner:e,orderPubKey:n}){const t=yield this.cancelOrderInstruction({owner:e,orderPubKey:n});return(new a.Transaction).add(...t)}))}batchCancelOrder(e){return S(this,arguments,(function*({owner:e,ordersPubKey:n}){if(n.length>10)throw"ordersPubKey lenght exceed 10";const t=yield Promise.all(n.map((n=>this.cancelOrderInstruction({owner:e,orderPubKey:n}))));return(new a.Transaction).add(...t.flat())}))}cancelExpiredOrderInstruction(e){return S(this,arguments,(function*({orderPubKey:e}){const n=yield this.program.account.order.fetch(e),t=yield this.connection.getAccountInfo(n.inputMint),[r,i]=yield K(n.inputMint,n.maker,this.connection,void 0,void 0,t.owner);return i&&!n.inputMint.equals(o.Gd)?null:yield this.program.methods.cancelExpiredOrder().accounts({order:e,reserve:n.reserve,maker:n.maker,makerInputAccount:r,tokenProgram:t.owner,inputMint:n.inputMint}).instruction()}))}cancelExpiredOrder(e){return S(this,arguments,(function*({orderPubKey:e}){const n=yield this.cancelExpiredOrderInstruction({orderPubKey:e});return n?(new a.Transaction).add(n):null}))}batchCancelExpiredOrder(e){return S(this,arguments,(function*({ordersPubKey:e}){if(e.length>10)throw"ordersPubKey lenght exceed 10";const n=(yield Promise.all(e.map((e=>this.cancelExpiredOrderInstruction({orderPubKey:e}))))).filter(Boolean);return n.length>0?(new a.Transaction).add(...n):null}))}fillOrder(e){return S(this,arguments,(function*({owner:e,orderAccount:n,amount:t,expectedOutAmount:r}){const{account:i,publicKey:u}=n;let c=[],[s]=a.PublicKey.findProgramAddressSync([k.from("fee")],this.program.programId),m=i.makerOutputAccount,[[l,p],[d,y],[f,g],[h,A]]=yield Promise.all([K(i.outputMint,i.maker,this.connection,e),K(i.outputMint,e,this.connection),K(i.inputMint,e,this.connection),K(i.outputMint,s,this.connection,e)]);i.inputMint.toString()===o.Gd.toString()?f=e:g&&c.push(g),i.outputMint.toString()===o.Gd.toString()?(d=e,m=i.maker):(p&&c.push(p),y&&c.push(y)),A&&c.push(A);return yield this.program.methods.fillOrder(t,r).accounts({order:u,reserve:i.reserve,maker:i.maker,taker:e,makerOutputAccount:m,takerInputAccount:d,takerOutputAccount:f,programFeeAccount:h,referral:i.referral,feeAuthority:s}).preInstructions(c).transaction()}))}createReferralAccount(e){return S(this,null,(function*(){if(!this.referralAccount)throw"Referral is missing";if(!this.referralName)throw"Name is missing";return yield this.referralProvider.initializeReferralAccountWithName({projectPubKey:v,partnerPubKey:this.referralAccount,name:this.referralName,payerPubKey:e})}))}createReferralTokenAccount(e,n){return S(this,null,(function*(){if(!this.referralAccount)throw"Referral is missing";const t=this.getReferralAccountPubKey();if(!(yield this.referralProvider.getReferralAccount(t)))throw"Referral account already exists";return this.referralProvider.initializeReferralTokenAccount({mint:e,payerPubKey:n,referralAccountPubKey:t})}))}claimReferral(e,n){return S(this,null,(function*(){if(!this.referralAccount)throw"Referral is missing";const t=this.getReferralAccountPubKey();if(!(yield this.referralProvider.getReferralAccount(t)))throw"Referral account already exists";return yield this.referralProvider.claim({mint:e,referralAccountPubKey:t,payerPubKey:n})}))}getReferralAccountPubKey(){if(this.referralName)return this.referralProvider.getReferralAccountWithNamePubKey({projectPubKey:v,name:this.referralName});{const[e]=a.PublicKey.findProgramAddressSync([k.from("referral"),v.toBuffer(),this.referralAccount.toBuffer()],h);return e}}},x=e=>({memcmp:{offset:8,bytes:e.toBase58()}})}}]);
//# sourceMappingURL=7783-7fa791897e137dd1.js.map